/*
 * Help Wanted API
 * HelpWanted REST API server implents a Market Place for Self-Employed.     Assume all projects can be done remotely/online. You do not need to worry about matching by location. The Buyer with the lowest bid automatically wins the bid when the deadline is reached. Lowest bid is displayed on the project page.  We have 50K registered Buyers.  On average, 100 projects are posted every day. On average, each project receives 50 bids. On the homepage, we need to show 100 most recent projects. Optionally you can support pagination. You are welcome to assume unspecified requirements to make it better for the customers.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: val@filin.us
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package us.filin.helpwanted.pojo;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import java.io.Serializable;
import javax.validation.constraints.*;

/**
 * ProjectDetailPOJO
 */

public class ProjectDetailPOJO  implements Serializable {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("files")
  private List<String> files = null;

  /**
   * Project Bidding Status
   */
  public enum BiddingStatusEnum {
    WAITING_START("waiting_start"),
    
    WAITING_BIDS("waiting_bids"),
    
    BIDDING("bidding"),
    
    PENDING("pending"),
    
    WINNER("winner"),
    
    NO_WINNER("no_winner");

    private String value;

    BiddingStatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BiddingStatusEnum fromValue(String text) {
      for (BiddingStatusEnum b : BiddingStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("biddingStatus")
  private BiddingStatusEnum biddingStatus = null;

  @JsonProperty("winningPrice")
  private BigDecimal winningPrice = null;

  public ProjectDetailPOJO id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ProjectDetailPOJO title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   **/
  @JsonProperty("title")
  @ApiModelProperty(example = "translate text from English to Spanish", value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ProjectDetailPOJO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   **/
  @JsonProperty("description")
  @ApiModelProperty(example = "big big description", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProjectDetailPOJO files(List<String> files) {
    this.files = files;
    return this;
  }

  public ProjectDetailPOJO addFilesItem(String filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<String>();
    }
    this.files.add(filesItem);
    return this;
  }

  /**
   * Get files
   * @return files
   **/
  @JsonProperty("files")
  @ApiModelProperty(value = "")
  public List<String> getFiles() {
    return files;
  }

  public void setFiles(List<String> files) {
    this.files = files;
  }

  public ProjectDetailPOJO biddingStatus(BiddingStatusEnum biddingStatus) {
    this.biddingStatus = biddingStatus;
    return this;
  }

  /**
   * Project Bidding Status
   * @return biddingStatus
   **/
  @JsonProperty("biddingStatus")
  @ApiModelProperty(value = "Project Bidding Status")
  public BiddingStatusEnum getBiddingStatus() {
    return biddingStatus;
  }

  public void setBiddingStatus(BiddingStatusEnum biddingStatus) {
    this.biddingStatus = biddingStatus;
  }

  public ProjectDetailPOJO winningPrice(BigDecimal winningPrice) {
    this.winningPrice = winningPrice;
    return this;
  }

  /**
   * Get winningPrice
   * @return winningPrice
   **/
  @JsonProperty("winningPrice")
  @ApiModelProperty(example = "17.95", value = "")
  public BigDecimal getWinningPrice() {
    return winningPrice;
  }

  public void setWinningPrice(BigDecimal winningPrice) {
    this.winningPrice = winningPrice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectDetailPOJO projectDetail = (ProjectDetailPOJO) o;
    return Objects.equals(this.id, projectDetail.id) &&
        Objects.equals(this.title, projectDetail.title) &&
        Objects.equals(this.description, projectDetail.description) &&
        Objects.equals(this.files, projectDetail.files) &&
        Objects.equals(this.biddingStatus, projectDetail.biddingStatus) &&
        Objects.equals(this.winningPrice, projectDetail.winningPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, files, biddingStatus, winningPrice);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectDetailPOJO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    biddingStatus: ").append(toIndentedString(biddingStatus)).append("\n");
    sb.append("    winningPrice: ").append(toIndentedString(winningPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

